[1mdiff --git a/ANALYSIS_LOGIC_FLOW.md b/ANALYSIS_LOGIC_FLOW.md[m
[1mindex 44751e3..ba94743 100644[m
[1m--- a/ANALYSIS_LOGIC_FLOW.md[m
[1m+++ b/ANALYSIS_LOGIC_FLOW.md[m
[36m@@ -145,7 +145,32 @@[m [mreturn {[m
 [m
 ---[m
 [m
[31m-## 4. LLM提供商与模型配置[m
[32m+[m[32m## 4. 分析师可用工具一览[m
[32m+[m
[32m+[m[32m| 分析师 | 调用文件 | 工具名称 | 数据内容 / 主要用途 |[m
[32m+[m[32m|--------|---------|---------|-----------------------|[m
[32m+[m[32m| 市场分析师 | `agent_utils.py` → `get_stock_market_data_unified` | **统一市场数据**：根据股票类型自动路由到 A 股/港股/美股数据源，返回包含价格区间、实时行情、技术指标摘要的富文本；美股分支使用 Finnhub 实时报价（当前价、涨跌幅、日内高低等）。 |[m
[32m+[m[32m| 市场分析师 | `agent_utils.py` → `get_YFin_data_online` | 从 Yahoo Finance 直接抓取指定区间的 OHLCV 原始数据，返回 CSV 字符串，用于补充历史行情。 |[m
[32m+[m[32m| 市场分析师 | `agent_utils.py` → `get_YFin_data` | 读取离线缓存的 Yahoo Finance CSV（本地 data 目录），提供历史日线数据。 |[m
[32m+[m[32m| 市场分析师 | `agent_utils.py` → `get_stockstats_indicators_report` / `get_stockstats_indicators_report_online` | 基于 Stockstats 生成技术指标报告（如 MA、MACD、RSI 等）的文本描述。 |[m
[32m+[m[32m| 基本面分析师 | `agent_utils.py` → `get_stock_fundamentals_unified` | **统一基本面**：自动识别市场，A 股使用自研数据提供器，港股使用 AKShare，US 使用 OpenAI/Finnhub 组合；返回公司概况、财务指标、收益历史等综合报告。 |[m
[32m+[m[32m| 基本面分析师 | `agent_utils.py` → `get_finnhub_company_insider_sentiment` | 调用 Finnhub 缓存，获取近 15 天内部人买卖情绪（change、mspr 等）。 |[m
[32m+[m[32m| 基本面分析师 | `agent_utils.py` → `get_finnhub_company_insider_transactions` | Finnhub 内部人交易明细（交易价格、数量、代码等）。 |[m
[32m+[m[32m| 基本面分析师 | `agent_utils.py` → `get_simfin_balance_sheet` / `get_simfin_income_stmt` / `get_simfin_cashflow` | 来自 SimFin 的最新资产负债表、损益表、现金流表文本。 |[m
[32m+[m[32m| 新闻分析师 | `agent_utils.py` → `get_stock_news_unified` | 统一新闻源：A/港股优先东方财富 + Google 新闻，美股使用 Finnhub 新闻；返回最近 7 天标题+摘要列表。 |[m
[32m+[m[32m| 新闻分析师 | `agent_utils.py` → `get_google_news` | 直接调用 Google News (本地适配) 搜索器，按关键词返回最新新闻摘要。 |[m
[32m+[m[32m| 新闻分析师 | `agent_utils.py` → `get_finnhub_news` | Finnhub 新闻数据（按日期区间聚合）。 |[m
[32m+[m[32m| 新闻分析师 | `agent_utils.py` → `get_reddit_news` | Reddit 社区热门新闻话题，作为离线备用。 |[m
[32m+[m[32m| 情绪分析师 | `agent_utils.py` → `get_stock_news_openai` | 使用 OpenAI 兼容接口（或 DashScope/OpenRouter 时的兼容端点）执行 web_search 工具，抓取近 7 天社交媒体/舆情摘要。Google 提供商下会返回 404，结果作为失败信息写回。 |[m
[32m+[m[32m| 情绪分析师 | `agent_utils.py` → `get_reddit_stock_info` | 从 Reddit 抓取指定股票的帖子摘要，用于舆情辅助。 |[m
[32m+[m[32m| 情绪分析师 | `agent_utils.py` → `get_chinese_social_sentiment` | 针对中概/港股的中文社交情绪（雪球、东方财富等），失败时回退到 Reddit。 |[m
[32m+[m[32m| 风险/辩论阶段 | `agent_utils.py` → 同市场、新闻、基本面工具 | 在反思环节可以再次调用相同工具补充缺失数据（受条件逻辑控制）。 |[m
[32m+[m
[32m+[m[32m> 📌 **说明**：工具列表来源于 `agent_utils.py` 中的 `@tool` 函数以及 `trading_graph.py` 的 `_create_tool_nodes()` 配置。是否调用取决于 LLM 的 `tool_calls`、条件节点（`conditional_logic.py`）以及当前提供商的兼容性。Google 提供商下 `get_stock_news_openai` 会返回失败信息，但不会中断流程，LLM 会基于失败提示继续生成分析。[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 5. LLM提供商与模型配置[m
 [m
 ### 配置来源: analysis_runner.py (行号224-344)[m
 [m
[36m@@ -185,7 +210,7 @@[m [melif llm_provider == "google":       # Google Gemini[m
 [m
 ---[m
 [m
[31m-## 5. LLM初始化 (trading_graph.py:68-143)[m
[32m+[m[32m## 6. LLM初始化 (trading_graph.py:68-143)[m
 [m
 ```python[m
 provider = self.config["llm_provider"].lower()[m
[36m@@ -222,7 +247,7 @@[m [melif provider == "deepseek":[m
 [m
 ---[m
 [m
[31m-## 6. 条件逻辑 (conditional_logic.py)[m
[32m+[m[32m## 7. 条件逻辑 (conditional_logic.py)[m
 [m
 ### 工具调用流程检查:[m
 [m
[36m@@ -265,7 +290,7 @@[m [mdef should_continue_debate(state: AgentState) -> str:[m
 [m
 ---[m
 [m
[31m-## 7. 最终决策生成[m
[32m+[m[32m## 8. 最终决策生成[m
 [m
 ### 交易员 (trader.py:10-116)[m
 [m
[36m@@ -328,7 +353,7 @@[m [mmessages = [[m
 [m
 ---[m
 [m
[31m-## 8. 数据流示意[m
[32m+[m[32m## 9. 数据流示意[m
 [m
 ### 从用户输入到最终输出:[m
 [m
[36m@@ -393,7 +418,7 @@[m [mrender_results() (web/components/results_display.py)[m
 [m
 ---[m
 [m
[31m-## 9. 关键文件位置速查[m
[32m+[m[32m## 10. 关键文件位置速查[m
 [m
 | 功能 | 文件 | 核心行号 |[m
 |-----|------|--------|[m
